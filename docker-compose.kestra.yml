services:
  kestra-postgres:
    image: postgres
    restart: unless-stopped
    networks:
      - traefik-net
    volumes:
      - kestra-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      start_period: 5s
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    user: "root"
    command: server standalone
    restart: unless-stopped
    networks:
      - traefik-net
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://kestra.localhost/
    depends_on:
      - kestra-postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.kestra.rule=Host(`kestra.localhost`)
      - traefik.http.routers.kestra.entrypoints=web
      - traefik.http.services.kestra.loadbalancer.server.port=8080

volumes:
  kestra-postgres-data:
    driver: local
  kestra-data:
    driver: local

networks:
  traefik-net:
    external: true