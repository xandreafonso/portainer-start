version: '3.8'

services:
  n8n-db:
    image: postgres
    networks:
      - traefik-net
    restart: always
    volumes:
      - n8n-db-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_PASSWORD=n8n_password

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    networks:
      - traefik-net
    volumes:
      - n8n-data:/home/node/.n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n-db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=n8n_password

      - GENERIC_TIMEZONE="America/Sao_Paulo"
      - TZ="America/Sao_Paulo"

      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=123456

      - WEBHOOK_URL=http://n8n.localhost

      - N8N_SECURE_COOKIE=false
      - N8N_HOST=n8n.localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http

      - NODE_ENV=production
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.localhost`)
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.services.n8n.loadbalancer.server.port=5678
      # - traefik.http.routers.flowise.tls.certresolver=letsencrypt-resolver

volumes:
  n8n-data:
    name: n8n-data
  n8n-db-postgres:
    name: n8n-db-postgres

networks:
  traefik-net:
    external: true